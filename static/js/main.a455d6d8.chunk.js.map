{"version":3,"sources":["contexts/UserContext.js","components/styled/LinkButton.jsx","components/styled/Page.jsx","components/styled/Subtitle.jsx","components/styled/Title.jsx","components/styled/WrapperHor.jsx","pages/HomePage.jsx","data/AuthKit.js","components/styled/TextInput.jsx","components/styled/SubmitButton.jsx","components/styled/Form.jsx","components/styled/Error.jsx","pages/LoginPage.jsx","components/styled/Select.jsx","pages/RegisterPage.jsx","data/ForumKit.js","components/PostListItem.jsx","components/PostList.jsx","components/styled/Button.jsx","pages/PostListPage.jsx","components/PostSingle.jsx","components/styled/TextArea.jsx","components/ResponseForm.jsx","components/ResponseSingle.jsx","components/ResponseList.jsx","pages/PostDetailPage.jsx","components/PostForm.jsx","pages/PostCreatePage.jsx","components/styled/Link.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["UserContext","createContext","styled","Link","div","h2","h1","HomePage","userInfo","useContext","Page","WrapperHor","Title","Subtitle","firstName","lastName","LinkButton","to","BASE_URL","AUTH_URL","this","ME_URL","COUNTRIES_URL","REGISTER_URL","TOKEN_KEY","email","password","fetchOptions","method","headers","body","JSON","stringify","loginResponse","succeeded","token","message","fetch","then","resp","status","json","data","messageFromAPI","Object","values","newUser","registerResponse","errorMessages","sessionStorage","setItem","getItem","removeItem","getToken","results","input","attrs","type","form","PageCenter","ErrorWrapper","LoginPage","useState","setEmail","setPassword","errorMessage","setErrorMessage","setUserInfo","setIsLoggedIn","a","Auth","login","setToken","setUserInfoInContext","getUserInfo","userInfoAPI","country","useEffect","Form","onSubmit","event","authenticate","preventDefault","TextInput","onChange","e","target","value","name","placeholder","SubmitButton","Error","select","RegisterPage","history","useHistory","setFirstName","setLastName","setCountry","countries","setCountries","setErrorMessages","fetchCountries","countriesFetched","createNewUser","registered","push","console","log","getCountries","required","Select","map","index","id","title","POSTS_URL","CATEGORIES_URL","url","getPrivateHeaders","postId","detailUrl","newPost","TitleLink","Row","tr","Td","td","PostListItem","props","post","postTitle","authorName","author","Table","table","HeadRow","th","Author","PostList","postList","button","PostListPage","setPostList","getPostList","Forum","fetchPostList","postListFetched","previous","Button","onClick","next","PostStyled","PostTitle","BackLink","Content","By","p","Created","SubContent","MetaOne","MetaTwo","MetaThree","PostSingle","createdAt","content","countResponses","isClosed","isPinned","updatedAt","userSubcriptionUpdated","userSubscribed","viewCount","entries","infoItem","category","textarea","ResponseForm","setTitle","response","setResponse","newResponse","parent","createPost","TextArea","rows","Response","h3","small","ResponseSingle","ResponseList","responseList","PostDetailPage","match","params","postDetails","setPostDetails","fetchPostDetails","details","getPostDetails","responses","PostForm","setContent","setCategory","categories","postCreated","cols","PostCreatePage","setCategories","fetchCategories","categoriesFetched","getCategories","NavbarStyled","Navbar","isLoggedIn","removeToken","App","Provider","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a455d6d8.chunk.js","sourcesContent":["import React, { createContext } from 'react'\r\n\r\nexport const UserContext = createContext({})","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled(Link)`\r\n  color: #495464;\r\n  display: inline-block;\r\n  display:inline-block;\r\n  padding:0.5em 3em;\r\n  border:0.16em solid #495464;\r\n  margin:0 0.3em 0.3em 0;\r\n  box-sizing: border-box;\r\n  text-decoration:none;\r\n  text-transform:uppercase;\r\n  font-family:'Roboto',sans-serif;\r\n  font-weight:400;\r\n  color:#495464;\r\n  text-align:center;\r\n  transition: all 0.15s;\r\n\r\n  &:hover {\r\n    background-color: #bbbfca;\r\n    color: #f4f4f2;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  //background-color: blue;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.h2`\r\n  text-align: center;\r\n  color: #495464;\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.h1`\r\n  color: #495464;\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  width: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n","import React, { useContext } from 'react'\r\n\r\nimport LinkButton from '../components/styled/LinkButton'\r\nimport Page from '../components/styled/Page'\r\nimport Subtitle from '../components/styled/Subtitle'\r\nimport Title from '../components/styled/Title'\r\nimport WrapperHor from '../components/styled/WrapperHor'\r\n\r\nimport { UserContext } from '../contexts/UserContext'\r\n\r\nexport default function HomePage() {\r\n  const { userInfo } = useContext(UserContext)\r\n\r\n  return (\r\n\r\n    <Page>\r\n      <WrapperHor>\r\n        <Title>Forum</Title>\r\n        <Subtitle> {`Welcome, ${userInfo.firstName} ${userInfo.lastName}`} </Subtitle>\r\n        <p>\r\n          BibleIpsum. May Yahweh answer you in the day of trouble. May the name of the God of Jacob set you up on high, \r\n          send you help from the sanctuary, grant you support from Zion, remember all your offerings, and accept your burnt sacrifice. \r\n          May He grant you your heart's desire, and fulfill all your counsel. We will triumph in your salvation. In the name of our God, \r\n          we will set up our banners. May Yahweh grant all your requests. Now I know that Yahweh saves his anointed. \r\n          He will answer him from his holy heaven, with the saving strength of his right hand. Some trust in chariots, and some in horses, \r\n          but we trust the name of Yahweh our God. They are bowed down and fallen, but we rise up, and stand upright. \r\n          Save, Yahweh! Let the King answer us when we call!\r\n        </p>\r\n        <p>\r\n          Blessed is the man who doesn't walk in the counsel of the wicked, \r\n          nor stand in the way of sinners, nor sit in the seat of scoffers; \r\n          but his delight is in Yahweh's law. On his law he meditates day and night. \r\n          He will be like a tree planted by the streams of water, \r\n          that brings forth its fruit in its season, whose leaf also does not wither. \r\n          Whatever he does shall prosper. The wicked are not so, but are like the chaff which the wind drives away. \r\n          Therefore the wicked shall not stand in the judgment, nor sinners in the congregation of the righteous. \r\n          For Yahweh knows the way of the righteous, but the way of the wicked shall perish.\r\n        </p>\r\n        <LinkButton to='/posts'>See all posts</LinkButton>\r\n      </WrapperHor>\r\n    </Page>\r\n\r\n  )\r\n}\r\n","class Auth {\r\n  BASE_URL = 'https://lab.willandskill.eu'\r\n  AUTH_URL = `${this.BASE_URL}/api/v1/auth/api-token-auth/`\r\n  ME_URL = `${this.BASE_URL}/api/v1/me`\r\n  COUNTRIES_URL = `${this.BASE_URL}/api/v1/countries/`\r\n  REGISTER_URL = `${this.BASE_URL}/api/v1/auth/users/`\r\n\r\n  TOKEN_KEY = 'JWT_TOKEN'\r\n\r\n  /* \r\n  *  Return loginResponse   \r\n  *     succeeded: true/false\r\n  *     token: (Token if login succeded)\r\n  *     message: (Message if error)\r\n  */\r\n  login(email, password) {\r\n    const fetchOptions = {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({email, password})\r\n    }\r\n\r\n    let loginResponse = {\r\n      succeeded: false,\r\n      token: '',\r\n      message: ''\r\n    }\r\n\r\n    return fetch(this.AUTH_URL, fetchOptions)\r\n    .then( resp => {\r\n      loginResponse.succeeded = resp.status === 200\r\n      return resp.json()\r\n    })\r\n    .then( data => {\r\n      const messageFromAPI = Object.values(data)[0][0] // Get the message that API returns when problem\r\n      loginResponse.token = data.token || ''\r\n      loginResponse.message = loginResponse.succeeded ? '' : messageFromAPI\r\n      return loginResponse\r\n    })\r\n  }\r\n\r\n  // Register\r\n  createNewUser(newUser) {\r\n    const fetchOptions = {\r\n      method: 'post',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify(newUser)\r\n    }\r\n\r\n    let registerResponse = {\r\n      succeeded: false,\r\n      body: null,\r\n      errorMessages: null\r\n    }\r\n\r\n    return fetch(this.REGISTER_URL, fetchOptions)\r\n    .then(resp => {\r\n      registerResponse.succeeded = resp.status === 201\r\n      return resp.json()\r\n    })\r\n    .then(data => {\r\n      if(registerResponse.succeeded) {\r\n        registerResponse.body = data\r\n      } else {\r\n        registerResponse.errorMessages = data.email || data.password\r\n      }\r\n      return registerResponse\r\n    })\r\n\r\n  }\r\n\r\n  setToken(token) {\r\n    sessionStorage.setItem(this.TOKEN_KEY, token)\r\n  }\r\n\r\n  getToken() {\r\n    return sessionStorage.getItem(this.TOKEN_KEY)\r\n  }\r\n\r\n  removeToken() {\r\n    sessionStorage.removeItem(this.TOKEN_KEY)\r\n  }\r\n\r\n  getUserInfo() {\r\n    const fetchOptions = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.getToken()}`\r\n      }\r\n    }\r\n    return fetch(this.ME_URL, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data)\r\n    /** Return\r\n    country: null\r\n    email: \"johncito@doe.se\"\r\n    firstName: \"Johncito\"\r\n    id: 45\r\n    lastName: \"Doe\"\r\n    phoneNumber: null\r\n    title: null\r\n    */\r\n  }\r\n\r\n  fetchCountries() {\r\n    const fetchOptions = {\r\n      headers: {'Content-Type': 'application/json'}\r\n    }\r\n    return fetch(this.COUNTRIES_URL, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data.results)\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default new Auth()","import styled from 'styled-components'\r\n\r\nexport default styled.input`\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.input.attrs({ type: 'submit' })`\r\n  margin: 5px 0;\r\n  padding: 8px;\r\n  background-color: #495464;\r\n  color: #f4f4f2;\r\n`","import styled from 'styled-components'\r\n\r\nexport default styled.form`\r\n  width: 300px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.div`\r\n  color: #aa0000;\r\n`\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport Auth from '../data/AuthKit'\r\nimport styled from 'styled-components'\r\n\r\nimport TextInput from '../components/styled/TextInput'\r\nimport SubmitButton from '../components/styled/SubmitButton'\r\nimport Form from '../components/styled/Form'\r\nimport Page from '../components/styled/Page'\r\nimport WrapperHor from '../components/styled/WrapperHor'\r\nimport Title from '../components/styled/Title'\r\nimport Error from '../components/styled/Error'\r\n\r\nconst PageCenter = styled(Page)`\r\n  min-height: 70vh;\r\n`\r\nconst ErrorWrapper = styled(WrapperHor)`\r\n  padding-top: 10px;\r\n`\r\n\r\nexport default function LoginPage() {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  //To useContext\r\n  const { setUserInfo, setIsLoggedIn } = useContext(UserContext)\r\n\r\n  function handleEmailInput(e) {\r\n    setEmail(e.target.value)\r\n  }\r\n\r\n  function handlePasswordInput(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    authenticate()\r\n    event.preventDefault()\r\n  }\r\n\r\n  async function authenticate() {\r\n    const loginResponse = await Auth.login(email, password)\r\n    setErrorMessage(loginResponse) //For showing error message on login\r\n    if (loginResponse.succeeded) {\r\n      // Set token\r\n      Auth.setToken(loginResponse.token)\r\n      // Set user info into userInfo context\r\n      setUserInfoInContext()\r\n      setIsLoggedIn(true)\r\n    }\r\n  }\r\n\r\n  async function setUserInfoInContext() {\r\n    const userInfoAPI = await Auth.getUserInfo()\r\n    setUserInfo({\r\n      email:      userInfoAPI.email,\r\n      country:    userInfoAPI.country,\r\n      lastName:   userInfoAPI.lastName,\r\n      firstName:  userInfoAPI.firstName\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    // TODO: Everything on context erases when refreshing page.\r\n    // useEffect asking for getToken on every page looking if there is a token?\r\n    // otherwise get everything again from API\r\n    if(Auth.getToken()) {\r\n      setUserInfoInContext()\r\n      setIsLoggedIn(true)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <PageCenter>\r\n      <WrapperHor>\r\n        <Title>Login</Title>\r\n        <Form onSubmit={handleSubmit}>\r\n          <TextInput type=\"text\" onChange={handleEmailInput} name=\"email\" placeholder=\"E-mail\" />\r\n          <TextInput type=\"password\" onChange={handlePasswordInput} name=\"password\" placeholder=\"Password\" />\r\n          <SubmitButton value=\"Login\" />\r\n        </Form>\r\n        <ErrorWrapper>\r\n          <Error>{ errorMessage && errorMessage.message } </Error>\r\n          {/* <small>{email} / {password}</small> */}\r\n        </ErrorWrapper>\r\n      </WrapperHor>\r\n    </PageCenter>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport default styled.select`\r\n  text-indent: 5px;\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Auth from '../data/AuthKit'\r\nimport styled from 'styled-components'\r\n\r\nimport TextInput from '../components/styled/TextInput'\r\nimport SubmitButton from '../components/styled/SubmitButton'\r\nimport Select from '../components/styled/Select'\r\nimport Form from '../components/styled/Form'\r\nimport Page from '../components/styled/Page'\r\nimport WrapperHor from '../components/styled/WrapperHor'\r\nimport Title from '../components/styled/Title'\r\nimport Error from '../components/styled/Error'\r\n\r\nconst PageCenter = styled(Page)`\r\n  min-height: 70vh;\r\n`\r\nconst ErrorWrapper = styled(WrapperHor)`\r\n  padding-top: 10px;\r\n`\r\n\r\n\r\nexport default function RegisterPage() {\r\n  let history = useHistory()\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [firstName, setFirstName] = useState('')\r\n  const [lastName, setLastName] = useState('')\r\n  const [country, setCountry] = useState('1') // Harcoded\r\n  const [countries, setCountries] = useState(null)\r\n  const [errorMessages, setErrorMessages] = useState(null)\r\n\r\n  async function getCountries() {\r\n    const countriesFetched = await Auth.fetchCountries()\r\n    setCountries(countriesFetched)\r\n  }\r\n  \r\n  function handleEmailInput(e) {\r\n    setEmail(e.target.value)\r\n  }\r\n  function handlePasswordInput(e) {\r\n    setPassword(e.target.value)\r\n  }\r\n  function handleFirstNameInput(e) {\r\n    setFirstName(e.target.value)\r\n  }\r\n  function handleLastNameInput(e) {\r\n    setLastName(e.target.value)\r\n  }\r\n  function handleCountriesInput(e) {\r\n    setCountry(e.target.value)\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault()\r\n    const newUser = {\r\n      email: email,\r\n      password: password,\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      country: country\r\n    }\r\n    const registered = await Auth.createNewUser(newUser)\r\n    if(registered.succeeded) {\r\n      history.push('/login')\r\n    } else {\r\n      setErrorMessages(registered.errorMessages)\r\n    }\r\n    console.log('submitResponse', registered)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getCountries()\r\n  }, [])\r\n  \r\n  return (\r\n    <PageCenter>\r\n      <WrapperHor>\r\n      <Title>Register</Title>\r\n      <Form onSubmit={handleSubmit}>\r\n        <TextInput type=\"text\" onChange={handleEmailInput} placeholder=\"Email\" required />\r\n        <TextInput type=\"password\" onChange={handlePasswordInput} placeholder=\"Password\" required />\r\n        <TextInput type=\"text\" onChange={handleFirstNameInput} placeholder=\"First name\" required />\r\n        <TextInput type=\"text\" onChange={handleLastNameInput} placeholder=\"Last name\" required />\r\n        <Select name=\"countries\" onChange={handleCountriesInput}>\r\n          {countries && countries.map((country, index) => {\r\n            return <option value={country.id} key={index}> {country.title} </option>\r\n          })}\r\n        </Select>\r\n        <SubmitButton value='Register' />\r\n      </Form>\r\n      <ErrorWrapper> \r\n        { \r\n          errorMessages && errorMessages.map((errorMessage, index) => {\r\n            return <Error key={index}> {errorMessage} </Error>\r\n          })\r\n        } \r\n      </ErrorWrapper>\r\n      </WrapperHor>\r\n    </PageCenter>\r\n  )\r\n}","class Forum {\r\n  BASE_URL = 'https://lab.willandskill.eu'\r\n  POSTS_URL = `${this.BASE_URL}/api/v1/forum/posts/`\r\n  CATEGORIES_URL = `${this.BASE_URL}/api/v1/forum/categories/`\r\n\r\n  TOKEN_KEY = 'JWT_TOKEN'\r\n\r\n  fetchPostList(url = this.POSTS_URL) {\r\n    const fetchOptions = {\r\n      headers: this.getPrivateHeaders()\r\n    }\r\n    return fetch(url, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data)\r\n  }\r\n\r\n  fetchPostDetails(postId) {\r\n    const detailUrl = `${this.POSTS_URL}${postId}/`\r\n    const fetchOptions = {\r\n      headers: this.getPrivateHeaders()\r\n    }\r\n    return fetch(detailUrl, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data)\r\n  }\r\n\r\n  fetchCategories() {\r\n    const fetchOptions = {\r\n      headers: this.getPrivateHeaders()\r\n    }    \r\n    return fetch(this.CATEGORIES_URL, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data.results)\r\n  }\r\n\r\n  createPost(newPost) {\r\n    const fetchOptions = {\r\n      method: 'post',\r\n      headers: this.getPrivateHeaders(),\r\n      body: JSON.stringify(newPost)\r\n    }\r\n    return fetch(this.POSTS_URL, fetchOptions)\r\n    .then( resp => resp.json())\r\n    .then( data => data)\r\n  }\r\n\r\n  getToken() {\r\n    return sessionStorage.getItem(this.TOKEN_KEY)\r\n  }\r\n\r\n  getPrivateHeaders() {\r\n    return {\r\n      'Content-Type': 'application/json',\r\n      'Authorization': `Bearer ${this.getToken()}`\r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default new Forum()","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nconst TitleLink = styled(Link)`\r\n  color: #495464;\r\n  padding: 2px 5px;\r\n  font-weight: bold;\r\n  text-decoration: none;\r\n`\r\nconst Row = styled.tr`\r\n  background-color:#bbbfca;\r\n  &:nth-child(even) {\r\n    background-color: #e8e8e8;\r\n  }\r\n`\r\nconst Td = styled.td`\r\n  padding: 8px;\r\n`\r\n\r\n\r\nexport default function PostListItem(props) {\r\n  const { post } = props\r\n  const postTitle = post.title\r\n  const postId = post.id\r\n  const authorName = post.author ? `${post.author.firstName} ${post.author.lastName}` : '---'\r\n  //console.log('post author email', post.author.email)  \r\n  return (    \r\n    <Row>\r\n      <Td><TitleLink to={`/posts/${postId}`}>{postTitle}</TitleLink></Td>\r\n      <Td> {authorName} </Td>\r\n    </Row>\r\n  )\r\n}","import React from 'react'\r\nimport PostListItem from './PostListItem'\r\nimport styled from 'styled-components'\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n  margin: 30px 5px;\r\n  border-collapse: collapse;\r\n`\r\nconst HeadRow = styled.tr`\r\n  background-color: #495464;\r\n  padding: 18px;\r\n`\r\nconst Title = styled.th`\r\n  color: #f4f4f2;\r\n  width: 70%;\r\n`\r\nconst Author = styled.th`\r\n  color: #f4f4f2;\r\n  width: 30%;\r\n`\r\n\r\nexport default function PostList(props) {\r\n  return (\r\n    <Table>\r\n      <HeadRow>\r\n        <Title>Title</Title>\r\n        <Author>Author</Author>\r\n      </HeadRow>\r\n      { \r\n        props.postList.map( (post, index) => {\r\n          return <PostListItem key={index} post={post} />\r\n        })\r\n      }\r\n    </Table>\r\n  )\r\n}","import styled from 'styled-components'\r\n\r\nexport default styled.button`\r\n  color: #495464;\r\n  display: inline-block;\r\n  display:inline-block;\r\n  padding:0.5em 3em;\r\n  border:0.16em solid #495464;\r\n  margin:0 0.3em 0.3em 0;\r\n  box-sizing: border-box;\r\n  text-decoration:none;\r\n  text-transform:uppercase;\r\n  font-family:'Roboto',sans-serif;\r\n  font-weight:400;\r\n  color:#495464;\r\n  text-align:center;\r\n  transition: all 0.15s;\r\n\r\n  &:hover {\r\n    background-color: #bbbfca;\r\n    color: #f4f4f2;\r\n  }\r\n`","import React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Forum from '../data/ForumKit'\r\nimport PostList from '../components/PostList'\r\nimport Page from '../components/styled/Page'\r\nimport Title from '../components/styled/Title'\r\nimport LinkButton from '../components/styled/LinkButton'\r\nimport Button from '../components/styled/Button'\r\nimport WrapperHor from '../components/styled/WrapperHor'\r\n\r\n// TODO: Show links for more post, when more than 30\r\nexport default function PostListPage() {\r\n  const [postList, setPostList] = useState(null)\r\n\r\n  async function getPostList(url) {\r\n    const postListFetched = await Forum.fetchPostList(url)\r\n    setPostList(postListFetched)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPostList()\r\n  }, [])\r\n\r\n  function handleNext() {\r\n    getPostList(postList.next)\r\n  }\r\n  function handlePrevious() {\r\n    getPostList(postList.previous)\r\n\r\n  }\r\n\r\n  return (\r\n    <Page>\r\n      <WrapperHor>\r\n        <Title>Post List page</Title>\r\n        <LinkButton to='/posts/create'>Create a Post</LinkButton>\r\n        {\r\n          postList && (\r\n            <>\r\n              <div>\r\n                { postList.previous && <Button onClick={handlePrevious}>Previous Posts</Button>}\r\n                { postList.next && <Button onClick={handleNext}>Next Posts</Button>}\r\n              </div>\r\n              <PostList postList={postList.results} /> \r\n            </>\r\n          )\r\n        }\r\n      </WrapperHor>\r\n    </Page>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport LinkButton from './styled/LinkButton'\r\nimport Title from './styled/Title'\r\n\r\n\r\nconst PostStyled = styled.div`\r\n  display: grid;\r\n  grid-template-areas:  'thetitle thetitle thetitle'                         \r\n                        'pcontent pcontent pcontent'\r\n                        'general author category'\r\n                        'backlink backlink backlink';\r\n`\r\nconst PostTitle = styled(Title)`\r\n  text-align: center;\r\n  grid-area: thetitle;\r\n  margin: 25px 0 0 0;\r\n  \r\n  `\r\nconst BackLink = styled(LinkButton)`\r\n  margin: 20px 0px;\r\n  grid-area: backlink;\r\n  `\r\nconst Content = styled.div`\r\n  text-align: center;\r\n  grid-area: pcontent;\r\n`\r\nconst By = styled.p`\r\n  margin: 2px 0;\r\n  `\r\nconst Created = styled.p`\r\n  margin: 2px 0;\r\n`\r\nconst SubContent = styled.p`\r\n  text-align: justify;\r\n`\r\nconst MetaOne = styled.div`\r\n  grid-area: general;\r\n  color: #6b6b6b;\r\n  justify-self: center;\r\n  `\r\nconst MetaTwo = styled.div`\r\n  grid-area: author;\r\n  color: #6b6b6b;\r\n  justify-self: center;\r\n  `\r\nconst MetaThree = styled.div`\r\n  grid-area: category;\r\n  color: #6b6b6b;\r\n  justify-self: center;\r\n`\r\n\r\n\r\nexport default function PostSingle(props) {\r\n  const { post } = props\r\n  const author = post.author ? `${post.author.firstName} ${post.author.lastName}` : '---'\r\n\r\n  return (\r\n    <PostStyled>\r\n      <PostTitle> {post.title} </PostTitle>\r\n      <BackLink to='/posts'>Back to all posts</BackLink>\r\n      <Content>\r\n        <Created> {post.createdAt} </Created>\r\n        <By><strong>By {author}</strong></By>\r\n        <SubContent> {post.content} </SubContent>\r\n      </Content>\r\n      {/* Render rest of Post metadata */}\r\n      <MetaOne>\r\n        <h4>Gral Metadata</h4>\r\n        <div><code><strong>countResponses</strong>: {post.countResponses}</code></div>\r\n        <div><code><strong>country</strong>: {post.country}</code></div>\r\n        <div><code><strong>id</strong>: {post.id}</code></div>\r\n        <div><code><strong>isClosed</strong>: {post.isClosed}</code></div>\r\n        <div><code><strong>isPinned</strong>: {post.isPinned}</code></div>\r\n        <div><code><strong>updatedAt</strong>: {post.updatedAt}</code></div>\r\n        <div><code><strong>userSubcriptionUpdated</strong>: {post.userSubcriptionUpdated}</code></div>\r\n        <div><code><strong>userSubscribed</strong>: {post.userSubscribed}</code></div>\r\n        <div><code><strong>viewCount</strong>: {post.viewCount}</code></div>\r\n      </MetaOne>      \r\n      <MetaTwo>\r\n        <h4>Author Metadata</h4>\r\n        {\r\n          post.author && Object.entries(post.author).map((infoItem, index) => {\r\n            return <div key={index}><code><strong>{infoItem[0]}</strong>: {infoItem[1]}</code></div>\r\n          })\r\n        }\r\n      </MetaTwo>\r\n      <MetaThree>\r\n        <h4>Category Metadata</h4>\r\n        {\r\n          post.category && Object.entries(post.category).map((infoItem, index) => {\r\n            return <div key={index}><code><strong>{infoItem[0]}</strong>: {infoItem[1]}</code></div>\r\n          })\r\n        }\r\n      </MetaThree>\r\n    </PostStyled>\r\n  )\r\n}","import styled from 'styled-components'\r\n\r\nexport default styled.textarea`\r\n  padding: 8px;\r\n  margin: 5px 0;\r\n`\r\n","import React, { useState } from 'react'\r\nimport Forum from '../data/ForumKit'\r\n\r\nimport Form from './styled/Form'\r\nimport SubmitButton from './styled/SubmitButton'\r\nimport Subtitle from './styled/Subtitle'\r\nimport TextArea from './styled/TextArea'\r\nimport TextInput from './styled/TextInput'\r\n\r\n/**\r\n * For my information:\r\n * props.history only appears if the component\r\n * has been passed as prop:  component={}\r\n * (Dynamic routing) when routing\r\n */\r\n\r\n// TODO: Send responses // Props for history\r\nexport default function ResponseForm(props) {\r\n  const postId = props.postId\r\n  const [title, setTitle] = useState('')\r\n  const [response, setResponse] = useState('')\r\n\r\n  function handleTitle(e) {\r\n    setTitle(e.target.value)\r\n  }\r\n  function handleResponse(e) {\r\n    setResponse(e.target.value)\r\n  }\r\n\r\n  async function tempHandleSubmitTestHistory() {\r\n    const newResponse = {\r\n      title: title,\r\n      content: response,\r\n      parent: postId\r\n    }\r\n    const resp = await Forum.createPost(newResponse)\r\n    console.log(resp)\r\n\r\n    // Redirect to the responded Post\r\n    props.history.push(`/posts/${postId}`)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={tempHandleSubmitTestHistory}>\r\n      <Subtitle>Send a response</Subtitle>\r\n      <TextInput type=\"text\" onChange={handleTitle} placeholder=\"Title\" required/>\r\n      <TextArea rows=\"4\" onChange={handleResponse} placeholder=\"Reply\" required/>\r\n      <SubmitButton value=\"Response\" />\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Response = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`\r\nconst Title = styled.h3`\r\n  margin: 20px 0 0 0;\r\n`\r\nconst By = styled.small`\r\n\r\n`\r\nconst Content = styled.p`\r\n\r\n`\r\n\r\n\r\nexport default function ResponseSingle(props) {\r\n  const { response } = props\r\n  const author = response.author ? `${response.author.firstName} ${response.author.lastName}` : '---'\r\n  return (\r\n    <>\r\n    <Response>\r\n      <Title> {response.title} </Title>\r\n      <By> By {author}</By>\r\n      <Content> {response.content} </Content>\r\n    </Response>\r\n    <hr/>\r\n    </>\r\n  )\r\n}","import React from 'react'\r\nimport ResponseSingle from './ResponseSingle'\r\n\r\nexport default function ResponseList(props) {\r\n  const {responseList} = props\r\n  return (\r\n    <div>\r\n      {\r\n        responseList.map((response, index) => {\r\n          return <ResponseSingle key={index} response={response} />\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport Forum from '../data/ForumKit'\r\n\r\nimport PostSingle from '../components/PostSingle'\r\nimport ResponseForm from '../components/ResponseForm'\r\nimport ResponseList from '../components/ResponseList'\r\n\r\nimport Page from '../components/styled/Page'\r\nimport WrapperHor from '../components/styled/WrapperHor'\r\nimport Subtitle from '../components/styled/Subtitle'\r\n\r\n\r\nexport default function PostDetailPage(props) {\r\n  // console.log('props.history', props.history)\r\n  const postId = props.match.params.id\r\n  const [ postDetails, setPostDetails ] = useState({})\r\n\r\n  async function getPostDetails() {\r\n    const details = await Forum.fetchPostDetails(postId)\r\n    // console.log('details', details)\r\n    setPostDetails(details)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getPostDetails()\r\n  }, [])\r\n\r\n  return (\r\n    <Page>\r\n      <WrapperHor>\r\n        <PostSingle post={postDetails} />\r\n        {/* TODO: Send Response */}\r\n        <ResponseForm history={props.history} postId={postId} />\r\n        <Subtitle>Responses</Subtitle>\r\n        {\r\n          postDetails.responses && <ResponseList responseList={postDetails.responses} />\r\n        }\r\n      </WrapperHor>\r\n    </Page>\r\n  )\r\n}","import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Forum from '../data/ForumKit'\r\n\r\n\r\nimport Form from './styled/Form'\r\nimport Select from './styled/Select'\r\nimport SubmitButton from './styled/SubmitButton'\r\nimport TextArea from './styled/TextArea'\r\nimport TextInput from './styled/TextInput'\r\n\r\n/**\r\n * Render a form for create a New Post\r\n * Props Categories comes from the API\r\n */\r\nexport default function PostForm(props) {\r\n  const [title, setTitle] = useState('')\r\n  const [content, setContent] = useState('')\r\n  const [category, setCategory] =useState('1')\r\n  const { categories } = props\r\n\r\n  let history = useHistory()\r\n\r\n  async function handleFormSubmit(e) {\r\n    e.preventDefault()\r\n    const newPost = {\r\n      title: title,\r\n      content: content,\r\n      category: category\r\n    }\r\n    const postCreated = await Forum.createPost(newPost)\r\n\r\n    // Redirect with history.push\r\n    if(postCreated.id){\r\n      history.push(`/posts/${postCreated.id}`)\r\n    } else {\r\n      console.log('Something went wrong!')\r\n    }\r\n  }\r\n\r\n  function handleTitle(e) {\r\n    setTitle(e.target.value)\r\n  }\r\n\r\n  function handleContent(e) {\r\n    setContent(e.target.value)\r\n  }\r\n\r\n  function handleCategory(e) {\r\n    setCategory(e.target.value)\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handleFormSubmit}>\r\n      <TextInput type=\"text\" name=\"title\" onChange={handleTitle} placeholder=\"Title\" required />\r\n      <TextArea name=\"content\" onChange={handleContent} placeholder=\"Content\" rows=\"4\" cols=\"50\" required />\r\n      <Select name=\"categories\" onChange={handleCategory} >\r\n        { categories && categories.map((category, index) => {\r\n          return <option value={category.id} key={index}>{category.title}</option>\r\n        })}\r\n      </Select>\r\n      <SubmitButton value='Send' />\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport Forum from '../data/ForumKit'\r\nimport styled from 'styled-components'\r\n\r\nimport PostForm from '../components/PostForm'\r\nimport Page from '../components/styled/Page'\r\n\r\nconst PageCenter = styled(Page)`\r\n  min-height: 70vh;\r\n`\r\n\r\n\r\nexport default function PostCreatePage(props) {\r\n  \r\n  const [categories, setCategories] = useState(null)\r\n  async function getCategories() {\r\n    const categoriesFetched = await Forum.fetchCategories()\r\n    setCategories(categoriesFetched)\r\n  }\r\n  \r\n  useEffect(() => {\r\n    getCategories()\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <PageCenter>\r\n      <PostForm categories={categories}/>\r\n    </PageCenter>\r\n  )\r\n}","import { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nexport default styled(Link)`\r\n  color: #495464;\r\n  padding: 2px 5px;\r\n  text-decoration: none;\r\n`\r\n","import React, { useContext } from 'react'\r\nimport { UserContext } from '../contexts/UserContext'\r\nimport styled from 'styled-components'\r\n//import { Link } from 'react-router-dom'\r\n\r\nimport Auth from '../data/AuthKit'\r\nimport Link from './styled/Link'\r\n\r\nconst NavbarStyled = styled.div`\r\n  background-color: #e8e8e8;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\n\r\nexport default function Navbar() {\r\n  const { isLoggedIn, setIsLoggedIn, setUserInfo } = useContext(UserContext)\r\n\r\n  function logout() {\r\n    Auth.removeToken()\r\n    setIsLoggedIn(false)\r\n    setUserInfo({})\r\n  }\r\n\r\n  return (\r\n    <NavbarStyled>\r\n        { !isLoggedIn && <Link to='/login' >Login</Link> }\r\n        { !isLoggedIn && <Link to='/register' >Register</Link>}\r\n        { isLoggedIn && <Link to='/home' >Home</Link>}\r\n        { isLoggedIn && <Link to='/posts' >Posts</Link>}\r\n        { isLoggedIn && <Link to='/login' onClick={logout} >Logout</Link>}\r\n    </NavbarStyled>\r\n  )\r\n}","import React, { useState } from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { UserContext } from './contexts/UserContext'\n\nimport HomePage from './pages/HomePage'\nimport LoginPage from './pages/LoginPage'\nimport RegisterPage from './pages/RegisterPage'\nimport PostListPage from './pages/PostListPage'\nimport PostDetailPage from './pages/PostDetailPage'\nimport PostCreatePage from './pages/PostCreatePage'\n\nimport Navbar from './components/Navbar'\n\nfunction App() {\n  const [userInfo, setUserInfo] = useState({\n    email:      '',\n    country:    '',\n    lastName:   '',\n    firstName:  ''\n  })\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  // Hola!! :) :P\n\n  return (\n    <>\n      <UserContext.Provider value={{userInfo, setUserInfo, isLoggedIn, setIsLoggedIn}}>\n        <Navbar />\n        <Switch>\n          <Route path='/posts/create'>\n            { isLoggedIn ? <PostCreatePage /> : <Redirect to='/login' />}            \n          </Route>\n          \n          <Route path='/posts/:id' component={PostDetailPage} />\n\n          <Route path='/posts'>\n            { isLoggedIn ? <PostListPage /> : <Redirect to='/login' />}            \n          </Route>\n\n          <Route path='/home'>\n            { isLoggedIn ? <HomePage /> : <Redirect to='/login' />}            \n          </Route>\n\n          <Route path='/login'>\n            { isLoggedIn ? <Redirect to='/home' /> : <LoginPage />}\n          </Route>\n\n          <Route path='/register'>\n            { isLoggedIn ? <Redirect to='/home' /> : <RegisterPage />}\n          </Route>\n\n          <Route path='/'> \n            <Redirect to='/login' />\n          </Route>\n        </Switch>\n      </UserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    background-color: #f4f4f2;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      sans-serif;\n  }\n`\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}